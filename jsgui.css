/* v0.2-dev */
html, body {
  width: 100%;
  height: 100%;
}
body {
  margin: 0;
  font-family: var(--fontFamily-sans);
  font-size: var(--size-normal);
  background: rgb(255, 255, 255);
  color: var(--gray);
  --fontFamily-sans: "Roboto", "Helvetica", "Arial", sans-serif;
  --fontFamily-serif: Times, 'Times New Roman', serif;
  /* generated by generateFontSizeCssVars() */
  --size-small: 12px;
  --size-small-1: var(--size-small);
  --size-small-2: var(--size-small);
  --size-small-3: var(--size-small);
  --size-normal: 16px;
  --size-normal-1: var(--size-small);
  --size-normal-2: var(--size-small);
  --size-normal-3: var(--size-small);
  --size-big: 20px;
  --size-big-1: var(--size-normal);
  --size-big-2: var(--size-small);
  --size-big-3: var(--size-small);
  --size-bigger: 26px;
  --size-bigger-1: var(--size-big);
  --size-bigger-2: var(--size-normal);
  --size-bigger-3: var(--size-small);
  /* end generated */
  --gray: rgba(0, 0, 0, 0.874);
  --gray-1: rgba(0, 0, 0, 0.437);
  --gray-2: rgba(0, 0, 0, 0.218);
  --gray-3: rgba(0, 0, 0, 0.109);
  --blue: rgb(20, 80, 160);
  --blue-1: rgba(20, 80, 160, 0.7);
  --blue-2: rgba(20, 80, 160, 0.4);
  --blue-3: rgba(20, 80, 160, 0.1);
  --red: rgb(200, 50, 50);
  --red-1: rgba(200, 50, 50, 0.7);
  --red-2: rgba(200, 50, 50, 0.4);
  --red-3: rgba(200, 50, 50, 0.1);
  --timing-d0: cubic-bezier(.14, 0, .14, 1);
}
* {
  max-width: 100%; /* fix ellipsis */
  box-sizing: border-box;
  line-height: 1;
  transition: color 0.1s var(--timing-d0);
}
span, a {
  display: inline-block; /* fix ellipsis */
  line-height: 1.5;
  vertical-align: top; /* fix inline-block */
}
a {
  color: var(--blue);
}
a.icon {
  text-decoration: none;
  color: var(--blue);
}
.selfLink {
  display: inline-flex;
  align-items: center;
}
.selfLink > .icon {
  visibility: hidden;
  color: var(--gray-2);
  text-decoration: none;
}
.selfLink:hover > .icon {
  visibility: visible;
}
.selfLink > .icon:hover {
  color: var(--blue);
}
.icon {
  box-sizing: content-box;
  padding: 0.1em;
  line-height: 1;
  width: 1em;
  height: 1em;
  color: var(--gray-1);
  user-select: none;
}
.icon[clickable="true"] {
  cursor: pointer;
}
.loadingSpinner {
  color: var(--blue);
  animation: 2s linear 0s infinite normal none running spin-animation;
}
@keyframes spin-animation {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.labeledInput {
  margin: var(--fieldsetMargin);
  padding: 0;
  width: var(--fieldsetWidth);
  height: var(--fieldsetHeight);
  border: var(--fieldsetBorder);
  border-radius: 4px;
  cursor: text;
  display: flex;
  justify-content: space-between;
  --fieldsetWidth: 194px;
  --fieldsetHeight: 42px;
  --fieldsetMargin: 0 1px 6px 1px;
  --fieldsetMarginFocus: 0 0 6px 0;
  --fieldsetBorder: 1px solid var(--gray-2);
  --fieldsetBorderHover: 1px solid var(--gray-1);
  --fieldsetBorderFocus: 2px solid var(--blue);
  --fieldsetBorderError: 1px solid var(--red);
  --fieldsetBorderErrorFocus: 2px solid var(--red);
  --labelColor: var(--gray-1);
  --labelColorFocus: var(--blue);
  --labelColorError: var(--red);
  --labelColor-x: var(--labelColor);
  --labelMarginLeft: 8px;
}
.labeledInput:hover {
  border: var(--fieldsetBorderHover);
}
.labeledInput:focus-within {
  margin: var(--fieldsetMarginFocus);
  width: calc(var(--fieldsetWidth) + 2px);
  border: var(--fieldsetBorderFocus);
  --labelColor-x: var(--labelColorFocus);
}
.labeledInput[fieldset-error="true"] {
  border: var(--fieldsetBorderError);
  --labelColor-x: var(--labelColorError);
}
.labeledInput[fieldset-error="true"]:focus-within {
  border: var(--fieldsetBorderErrorFocus);
}
.labeledInput legend {
  color: var(--labelColor-x);
  user-select: none;
  font-size: var(--size-small);
  margin-left: var(--labelMarginLeft);
  padding-inline: 4px;
  max-width: var(--fieldsetWidth);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.labeledInput > :not(legend) {
  position: relative;
  background: none;
  top: -3px;
  height: calc(var(--fieldsetHeight) - 9px);
}
.numberArrows {
  top: -6px !important;
  display: flex;
  flex-direction: column;
  color: var(--gray-1);
}
.numberArrows .icon {
  padding-left: calc(0.1em - 1px);
  border-left: 1px solid var(--gray-3);
  font-size: calc(1.25 * var(--size-small));
}
.numberArrows .icon.upIcon {
  padding-bottom: calc(0.1em - 1px);
  border-bottom: 1px solid var(--gray-3);
}
.numberArrows .icon:hover {
  color: var(--gray);
  background: var(--gray-3);
}
.labeledInput input {
  width: 100%;
  height: calc(var(--fieldsetHeight) - 9px);
  border: none;
  outline: none;
  flex: 1;
  padding-inline: calc(4px + var(--labelMarginLeft)) 9px;
  font-family: var(--fontFamily-sans);
  font-size: var(--size-normal);
}
.table {
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  border: var(--tableBorder);
  border-radius: 4px;
  color: var(--lightGray);
  --tableBorder: 1px solid var(--gray-2);
  --labelColor: var(--lightGray);
  --labelPadding: 8px 0 2px 16px;
  --rowPadding: 2px 0 2px 18px;
  --cellPadding: 0 14px 0 0;
}
.table[use-max-height="true"] {
  height: 100%;
}
.table[is-loading="true"] {
  justify-content: center;
  align-items: center;
}
.tableLabel {
  padding: var(--labelPadding);
  font-size: var(--size-bigger);
  color: var(--labelColor);
}
.tableRow {
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: stretch;
  border-bottom: var(--tableBorder);
  padding: var(--rowPadding);
}
.tableRow.tableBody {
  font-family: var(--fontFamily-serif);
  font-size: var(--size-big);
}
.tableCell {
  flex: 1;
  padding: var(--cellPadding);
  color: var(--cellColor);
}
.pageContent {
  padding: 8px;
  flex: 1;
}
